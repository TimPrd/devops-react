# blacklist
#branches:
#  except:
#    - DEV

# whitelist
branches:
  only:
    - master

language: node_js
node_js:
  - "stable"


#sudo: required

#services:
#  - docker

#env:
#  - DOCKER_COMPOSE_VERSION=1.23.1

cache:
  directories:
    - node_modules


jobs:
  include:
    - stage: test
      script: npm test -- --coverage # Include coverage when running tests
    - stage: build
      script: npm run build
    - stage: deploy
      deploy:
        provider: heroku
        api_key: $HEROKU_KEY
        app: $HEROKU_APP
      
on:
  branch: master

after_script: # Upload coverage reports 
  - COVERALLS_REPO_TOKEN=$coveralls_repo_token npm run coveralls




#before_install:
#   - sudo rm /usr/local/bin/docker-compose
#   - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
#   - chmod +x docker-compose
#   - sudo mv docker-compose /usr/local/bin

# before_script:
#   - cd ./[BACK]
#   - npm install
#   - docker-compose build
#   - docker-compose up -d
#   - docker exec -it bh_node npm install
#   - cd ../[FRONT]
#   - npm install
#   - npm install terser@3.14.1 --save-dev
#   - npm run test
#   - npm run build
# #  - docker-compose run node sequelize db:migrate
# #  - docker exec -it bh_node ./node_modules/sequelize-cli/bin/sequelize db:migrate
# # - docker exec -it bh_node node_modules/.bin/sequelize db:seed:all

# # - docker-compose run users-service knex seed:run --env development --knexfile app/knexfile.js
# #   - docker-compose run locations-service knex migrate:latest --env development --knexfile app/knexfile.js
# #   - docker-compose run locations-service knex seed:run --env development --knexfile app/knexfile.js

# script:
# # - docker exec -it bh_node node_modules/.bin/sequelize db:migrate
# # - npm run travis
#   - docker ps

# after_script:
#   - docker-compose down

# after_success:
#   - docker exec -it bh_node npm run coveralls